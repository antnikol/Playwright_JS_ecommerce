name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-test:
    name: "Run Playwright tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: |
          sudo apt-get install -y allure
          npm install -g allure-commandline
          npm install --save-dev allure-commandline allure-playwright playwright express

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start Express server for mock test
        run: |
          echo "
          import express from 'express';
          const app = express();
          const port = 3000;

          app.use(express.static('.'))

          app.get('/api/productsList', (req, res) => {
            res.json({ products: [{ name: 'Mocked Product' }] });
          });

          app.listen(port, () => {
            console.log('Mock server is running at http://localhost:' + port);
          });
          " > server.js

          nohup node server.js &

      - name: Wait for the server to be ready
        run: |
          echo "Waiting for the mock server to start..."
          until curl --silent --head --fail http://localhost:3000/api/productsList; do
            echo "Waiting for server..."
            sleep 1
          done
          echo "Mock server is up!"

      - name: Run Playwright tests (including the one with mock server)
        run: |
          npx playwright test --reporter=list,allure-playwright,html
        continue-on-error: true

      - name: List contents of allure-results directory
        run: ls -l allure-results || echo "Directory allure-results not found or empty."

      - name: Generate Allure report
        run: |
          if [ -d "./allure-results" ]; then
            allure generate ./allure-results --clean || echo "Failed to generate Allure report."
          else
            echo "No allure-results directory found, skipping report generation."
          fi
        continue-on-error: true

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: ./allure-report
          if-no-files-found: warn

      - name: Publish Allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: ./allure-results

      - name: Upload Playwright screenshots (on failure)
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots
          path: ./playwright/screenshots

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

      - name: List contents of allure-results directory
        run: ls -l allure-results

      - name: Configure GitHub token for authentication
        if: always()
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p ./docs
          cp -r ./allure-report/* ./docs/

      - name: Stop Express server
        run: |
          if pgrep -f "server.js"; then
            pkill -f server.js
          else
            echo "Server is stopped and not running"
          fi
